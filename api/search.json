[{"id":"f73a8e23e6f6f669cf99c7dba8fa0722","title":"","content":"一些同步NFLSOJ的帖子\n由于mzy没什么好的内容，，最近我会同步NFLSOJ的讨论板块。\n不过，一些未标注原题的题解和过时信息会被跳过。\n\n造福后人：树形背包 dp 的错误写法原文链接：http://192.168.188.77/article/2150\n作者：XiaoZecheng\n这是一段树形dp的错误代码。\n123drep(i, k, 0)    drep(j, i, 0)      dp[u][i] = max(dp[u][i], dp[u][i-j] + dp[v][j]);\n\n看起来正确无比，是吗？事实上，这份代码的错误非常难调（我写了两道题都是调死在这里）。\n当j&#x3D;0时，转移方程变为**dp[u][i] &#x3D; max(dp[u][i], dp[u][i] + dp[v][0]);**。当dp(v,0)≠0时，这个等于说更新了dp(u,i)两边，不满足吩咐背包的特征。\n因此，我们一定得这么写：\n123456drep(i, k, 0) &#123;  int val = dp[u][i];  drep(j, i, 0)    val = max(val, dp[u][i-j] + dp[v][j]);  dp[u][i] = val;&#125;\n\n以后做题的时候如果实在不知道怎么处理，不如用个 tmp 数组先转存一下，就没有这个问题。\n\n推荐一个做题的好方法哦原文链接：http://192.168.188.77/article/4267\n作者：wangyize\n1234567891011要做题了，你会不会感到不安？脑袋里一片空白？那可能是因为你的方法不对，今天让我来推荐一个做题的好方法吧。                                      ^^^^第一步，把题目认真地读3遍（第一遍看全部题目，第二遍重点看问题与条件，第三遍重点看输入输出格式与数据范围和样例）第二步，思考问题，将刚刚看的问题进行思考。第三步，根据条件来再次思考问题。第四步，找特例，根据自己的思路、输入输出格式与数据范围和样例进行找特例，优化等操作。第五步，开始写代码吧！(*^▽^*)\n\n(mzy：不知道这篇文章怎么过审の)\n\n警示后人原文链接：http://192.168.188.77/article/2117\n作者：XiaoZecheng\n\nHDU 会把 RE 报成 WA。\n这道题“该策略至少已经启用过一次”代表的是从开始以来，而不是从上次启动以来，所以不判一下会 RE！\nset 等容器在删除 end() 的时候会炸。\n\n\n数组式前向星（区间建图）——关于邻接表原文链接：http://192.168.188.77/article/1764\n作者：20200836\n高呼： 斯巴克瑟文大帝万岁众所周知，链式前向星的建图比vector快，但是访问比vector慢（并且有些人厌恶vector，比如笔者）。这是因为vector内部地址是连续的，从而可以加速（具体原理不明）。为了防止被卡常，可以采用斯巴克瑟文大帝发明的数组式前向星。\n数组式前向星有线性的构造方法：先构造链式前向星，然后再根据链式前向星构造数组式前向星，代码如下（以无向图为例，感谢b6e0）：\n123456789101112131415int m, n, u[nMax], v[nMax], g[mMax2], r[nMax];// ...for (int i = 0; i &lt; m; i++) &#123;  scanf(&quot;%d%d&quot;, &amp;u[i], &amp;v[i]);  r[u[i]]++;  r[v[i]]++;&#125;for (int i = 1, j = 0; i &lt;= n; i++) &#123;  j += r[i];  r[i] = j - r[i];&#125;for (int i = 1; i &lt;= m; i++) &#123;  g[r[u[i]]++] = v[i];  g[r[v[i]]++] = u[i];&#125;\n\n使用时：\n123for (int i = r[u - 1]; i &lt; r[u]; i++) &#123; // 访问u的邻居  // v[i]是u的邻居&#125;\n\n相当于链式前向星的\n123for (int i = h[u]; i; i = nxt[i]) &#123;  // to[i]是u的邻居&#125;\n\n最后是干货部分，数据来源于我的老爷机，n&#x3D;m&#x3D;1e6，(u,v,w)表示十次测试内，最快为u，平均为v，最慢为w，时间单位为ms（访问指访问每个点的邻居各一次）：\n\n\n\n测试项目\n链式前向星\nvector\n数组式前向星\n\n\n\n建图时长\n（12，13.4，16）\n(145,148.9,155)\n(26,27.3,31)\n\n\n访问时长\n（170，175.8，184）\n(31,32.3,33)\n(6,6.7,8)\n\n\n建图时长（-O2）\n（9，9.1，10）\n(160,164.4,170)\n(21,22.9,25)\n\n\n访问时长（-O2）\n（160，164.4，170）\n(5,5.8,7)\n(1,1.9,2)\n\n\n可加边\n可以\n可以\n不可以\n\n\n","slug":"一些同步NFLSOJ的帖子","date":"2024-07-30T12:03:31.293Z","categories_index":"","tags_index":"","author_index":"Aurora"},{"id":"f73a8e23e6f6f669cf99c7dba8fa0722","title":"","content":"面向对象思想的概念与实现\n\n\n\n\n\n\n\n\n面向对象程序设计（英语：Object-oriented programming，缩写：OOP）是种具有对象概念的编程典范，同时也是一种程序开发的抽象方针。它可能包含数据、特性、代码与方法。对象则指的是类（class）的实例。它将对象作为程序的基本单元，将程序和数据封装其中，以提高软件的重用性、灵活性和扩展性，对象里的程序可以访问及经常修改对象相关连的数据。在面向对象程序编程里，计算机程序会被设计成彼此相关的对象。\n​\t\t\t\t\t\t\t\t\t\t\t\t\t——wikipedia\n面向对象开发是一个重要的编程思想，核心观点是把编程中的步骤抽象成类，一个类拥有数据和方法。和传统的面向过程相比，编写者不必纠结在代码中，而是将内容抽象成一个个类。面向对象程序设计要比以往的做法更加便于学习，因为它能够让人们更简单地设计并维护程序，使得程序更加便于分析、设计、理解。\n重要的面向对象编程语言包含Python、Java、C++、Common Lisp、Objective-C、Smalltalk、Delphi、Swift、C#、Perl、Ruby、JavaScript 与 PHP等。\n当然，面向对象编程语言同样可以模拟面向过程编程运行。本文的实例代码会有Python，Java，C++三个版本，感兴趣的同学可以自己查一下其他编程语言。\n顺便提一嘴，oi比赛是完全用不到面向对象的，毕竟一共就一个开发者，注重于计算过程而非\n","slug":"面向对象思想的概念与实现","date":"2024-07-25T00:41:13.547Z","categories_index":"","tags_index":"","author_index":"Aurora"},{"id":"f73a8e23e6f6f669cf99c7dba8fa0722","title":"","content":"关于通过…的一些感想（1）（同标题简介今天刷CSDN找周赛题解时，发现了一篇文章。原文找不到了，意思大概是说：  \n​\t家里的路由器、光猫会分配ipv6，激活之后，可以将域名解析上，然后在家里\t搭建服务器。  \n听起来挺有意思的，不是吗？毕竟五百块钱E3+B85，随便搞块显卡，刷个系统就能当服务器，没必要上阿里云被压榨。  \n这，就是今天被压榨整整一天的起因。。。。\n部署Nginx我们需要部署Nginx用于测试是否网络联通。\n我一开始是在我平时工作用的电脑上的。配置如下：\n\nCPU：13490F\n主板：ASUS小吹雪B760M\n显卡：技嘉Rx6400\n内存：金百达DDR5 16G×2\n操作系统：WIndows11专业版（激活\n\n为了测试方便，我们需要先在本地部署Nginx。\n&lt;windows系统下安装Nginx以及简单使用（详解）_nginx windows-CSDN博客&gt;\n大家直接参考这个即可。切记：不要双击运行Nginx！！！正确做法为命令行中cd到Nginx目录下，然后输入：\n​\tstart nginx\n如果双击了，那么一定要在任务管理器中杀掉所有Nginx的进程。\n不出意外的话，此时访问locaohost:80，即可显示出Nginx的一个页面。\n接下来，我们需要修改一个配置文件，在Nginx的安装目录下有一个conf文件夹，conf文件夹中有一个nginx.conf。使用sublime或vscode打开。（其他软件也行，但这俩方便。\n‘’’\nserver{\n​\tlisten\t\t80;\n​\tserver_name   localhost;\n‘’’\n在listen 80和server_name localhost之间加入一行：\n​\tlisten [::]:80;\n表示接受ipv6的访问。\n部署域名（上）购买一个域名（或者白嫖，网上有教程的\n这个没什么难度，图省事就用阿里云，但是需要实名认证。\n国外的域名的话倒是可以用免费的，但是比较折腾。\n自行解决吧，ip地址也不是不能用。\n这一步可以以后再做，后半部分可能要放到下一期了。。。。\n公网IPV6（血压飙升难度真正大的开始了（至少对我而言\n打开cmd，输入ipconfig。找到默认网关的ip（一般是192.168.1.1）\n接下来的步骤不同的网络运营商会有所不同，移动和联通的用户自行Google，毕竟我家是电信的。\n首先，你需要得到超级管理员的账号。\n普通管理员的账号密码就在光猫上，记下来。\nhttps://blog.csdn.net/qq754772661/article/details/104983156\n这一步我也没有成功，大家可以多找找教程，成功了也教教我\n听说有些光猫有默认密码，但我的貌似没成功。\n总结嘶~累了，要去陪女性朋友，这一篇文章先写到这里。等我折腾完我会再写一篇续集。本文会同步发在blog.black-hole.asia和nfls.asia上的。  \n下一期，我们讲解如何将光猫的地址转移到电脑上，同时使用ipv6的地址或域名访问网站。\n如果有下下期的话，我们会讲解如何搭建小型服务器并安装Ubuntu20.04\n哈睡了晚安。爱你\n","slug":"关于通过AAAA解析与ipv6在家里搭建服务器的一些感想（1）","date":"2024-07-05T16:07:37.886Z","categories_index":"","tags_index":"","author_index":"Aurora"},{"id":"f1789ded0e906ea0d36695e117e070f6","title":"自我介绍","content":"中文欢迎来到黑洞工作室的博客网站！(虽然本站是mzy未经Yaoqx擅自建立的\n本站将发表部分博文，让大家更了解黑洞工作室，mzy，Yaoqx,以及大量的编程技巧（甚至包括scratch！\n本站目前基于hexo+node.js架构开发，预计在六个月内（2024&#x2F;12&#x2F;30）会全面转变于基于springboot+vue.js的架构，页面非常精美\n本站网址：blog.black-hole.asia(以后会改)\nYaoqx个人网站地址: yaoqx.black-hole.asia(以后会改)或yaoqxcn.github.io（两个网站内容相同\nmzy的个人网站：崩了，以前是112.124.33.59，现在捐出来给黑洞工作室用了\nmzy将不定期在本站上发布信息竞赛，scratch，python，C++，java，web前端，django，springboot以及node.js的学习笔记与教程文档。\nPS：话说有没有人能借mzy一台imac，mzy想学swift开发\nEnglishWelcome to the blog-site of black-hole studio.(Though Yaoqx want to kill mzy because of this site.\nThis site will pubilsh some blog.\nThis site is based on so many shits that I wasn’t willing to translate them.\nOur url: black-hole.asia\nmzy writes article. Yaoqx attack mzy.\nPS: mzy need imac!!!\n","slug":"自我介绍","date":"2024-06-30T11:20:21.000Z","categories_index":"","tags_index":"","author_index":"Aurora"}]